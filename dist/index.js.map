{
  "version": 3,
  "sources": ["../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name sliceLength\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/slice/base/length}\n*/\nsetReadOnly( ns, 'sliceLength', require( '@stdlib/slice-base-length' ) );\n\n/**\n* @name nonreducedDimensions\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/slice/base/nonreduced-dimensions}\n*/\nsetReadOnly( ns, 'nonreducedDimensions', require( '@stdlib/slice-base-nonreduced-dimensions' ) );\n\n/**\n* @name normalizeMultiSlice\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/slice/base/normalize-multi-slice}\n*/\nsetReadOnly( ns, 'normalizeMultiSlice', require( '@stdlib/slice-base-normalize-multi-slice' ) );\n\n/**\n* @name normalizeSlice\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/slice/base/normalize-slice}\n*/\nsetReadOnly( ns, 'normalizeSlice', require( '@stdlib/slice-base-normalize-slice' ) );\n\n/**\n* @name seq2multislice\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/slice/base/seq2multislice}\n*/\nsetReadOnly( ns, 'seq2multislice', require( '@stdlib/slice-base-seq2multislice' ) );\n\n/**\n* @name seq2slice\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/slice/base/seq2slice}\n*/\nsetReadOnly( ns, 'seq2slice', require( '@stdlib/slice-base-seq2slice' ) );\n\n/**\n* @name sliceShape\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/slice/base/shape}\n*/\nsetReadOnly( ns, 'sliceShape', require( '@stdlib/slice-base-shape' ) );\n\n/**\n* @name slice2seq\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/slice/base/slice2seq}\n*/\nsetReadOnly( ns, 'slice2seq', require( '@stdlib/slice-base-slice2seq' ) );\n\n/**\n* @name str2multislice\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/slice/base/str2multislice}\n*/\nsetReadOnly( ns, 'str2multislice', require( '@stdlib/slice-base-str2multislice' ) );\n\n/**\n* @name str2slice\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/slice/base/str2slice}\n*/\nsetReadOnly( ns, 'str2slice', require( '@stdlib/slice-base-str2slice' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n"],
  "mappings": "aA0BA,IAAIA,EAAc,QAAS,yCAA0C,EAUjEC,EAAK,CAAC,EASVD,EAAaC,EAAI,cAAe,QAAS,2BAA4B,CAAE,EASvED,EAAaC,EAAI,uBAAwB,QAAS,0CAA2C,CAAE,EAS/FD,EAAaC,EAAI,sBAAuB,QAAS,0CAA2C,CAAE,EAS9FD,EAAaC,EAAI,iBAAkB,QAAS,oCAAqC,CAAE,EASnFD,EAAaC,EAAI,iBAAkB,QAAS,mCAAoC,CAAE,EASlFD,EAAaC,EAAI,YAAa,QAAS,8BAA+B,CAAE,EASxED,EAAaC,EAAI,aAAc,QAAS,0BAA2B,CAAE,EASrED,EAAaC,EAAI,YAAa,QAAS,8BAA+B,CAAE,EASxED,EAAaC,EAAI,iBAAkB,QAAS,mCAAoC,CAAE,EASlFD,EAAaC,EAAI,YAAa,QAAS,8BAA+B,CAAE,EAKxE,OAAO,QAAUA",
  "names": ["setReadOnly", "ns"]
}
